import{createPeerConnection as e}from"@voximplant/websdk/modules/webrtc";import{SDK as t}from"@voximplant/websdk";function n(e){return e<0?NaN:e<=30?0|Math.random()*(1<<e):e<=53?(0|Math.random()*(1<<30))+(0|Math.random()*(1<<e-30))*(1<<30):NaN}function i(e,t){let n=e.toString(16),i=t-n.length,s="0";for(;i>0;i>>>=1,s+=s)1&i&&(n=s+n);return n}const s=function(e){const t={},n=function(t){return!e||Object.values(e).some((e=>e===t))},i=function(e,i){n(e)&&t[e.name]&&(t[e.name]=t[e.name].filter((e=>e.listener!==i)))};return{addEventListener:function(e,s,a){var o;n(e)&&(o=e.name,t[o]||(t[o]=[]),a&&a.signal&&(a.signal.onabort=function(){i(e,s)}),t[e.name].push({once:a&&a.once||!1,fulfilled:!1,listener:s}))},removeEventListener:i,dispatchEvent:function(e){const n=e.type.name;t[n]&&t[n].forEach((t=>{t.once&&t.fulfilled||t.listener(e),t.fulfilled=!0}))}}};const a=((e,t="")=>(n,...i)=>{const s=e[n];return t+(s?((e,...t)=>e.replace(/{(\d+)}/g,(function(e,n){return void 0!==t[n-1]?t[n-1]:e})))(s,...i):n)})(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},{}),{}),{WARN_CONF_NO_MEDIA_ADDED:"No media was added. Join conference as viewer"}),{ERR_NOT_CONFIGURED:"Voximplant WebSDK not configured yet. Please use SDK.configure before using any Voximplant WsbSDK functions."}),{}));function o(e){return{name:e}}const r=o("EndpointAdded"),c=o("EndpointRemoved"),d=o("EndpointUpdated"),p=o("MessageReceived"),l=o("Connected"),h=o("Disconnected");var u=Object.freeze({__proto__:null,EndpointRemoved:c,EndpointUpdated:d,EndpointAdded:r,MessageReceived:p,Connected:l,Disconnected:h});const m=new WeakMap;function f(e,t){const n=m.get(e);return n&&n[t]}function v(e,t,n){let i=m.get(e);i||(i={},m.set(e,i)),i[t]=n}const g=e=>t=>t.kind===e||t.kind==="screen_"+e,O=e=>(t,n)=>t.kind===n.kind?0:t.kind===e?1:-1;function*w(e){for(const t of e)yield t;return!1}class k extends class{constructor(){const e=s();this.addEventListener=e.addEventListener,this.removeEventListener=e.removeEventListener,this.dispatchEvent=e.dispatchEvent}}{constructor(e){var t;super(),this.peerConnectionList=new Map,this.mediaPcMap=new Map,this.uuid=(null===(t=global.crypto)||void 0===t?void 0:t.randomUUID)?global.crypto.randomUUID():i(n(32),8)+"-"+i(n(16),4)+"-"+i(16384|n(12),4)+"-"+i(32768|n(14),4)+"-"+i(n(48),12),v(this,"state","new"),v(this,"initOptions",e)}get state(){return f(this,"state")}get outgoingMedia(){var e,t;return(null===(t=null===(e=f(this,"initOptions"))||void 0===e?void 0:e.sendOptions)||void 0===t?void 0:t.media)||[]}async init(){this.outgoingMedia.length||t.log(a("WARN_CONF_NO_MEDIA_ADDED"),{logLevel:"warning"}),await this._generatePair(this.outgoingMedia,!0)}async start(){if("new"!==this.state)return Promise.reject("Conference already started");if(!f(this,"initOptions"))return Promise.reject("SDK not initialized");v(this,"state","connecting"),await this.activatePc(Array.from(this.peerConnectionList.values()))}async hangup(){if("new"===this.state)return Promise.reject("Conference doesn't started yet.");v(this,"state","disconnected");const e=f(this,"initOptions");for(const t of this.peerConnectionList.values())null==e||e.core.send({name:"disconnectCall",params:{id:t.id,headers:{}}},{toGW:!0});this.dispatchEvent({type:h,target:this,timeStamp:Date.now()})}sendMessage(e){const t=f(this,"initOptions");if(!(null==t?void 0:t.firstPc))throw new Error("No active peer connection");null==t||t.core.send({name:"sendSIPInfo",params:{id:t.firstPc,type:"application",subType:"zingaya-im",message:e,headers:{}}},{toGW:!0})}async addMedia(e){const t=f(this,"initOptions");if(!t)return Promise.reject("SDK not initialized");const n=e.map((e=>(-1!==e.kind.indexOf("video")&&(e.simulcast=!0),e))),i=t.sendOptions||{media:[]};if(i.media=[...i.media,...n],v(this,"initOptions",Object.assign(Object.assign({},t),{sendOptions:i})),await this._generatePair(e),"connected"===this.state){const e=Array.from(this.peerConnectionList.values()).filter((e=>e.isInnocent));await this.activatePc(e)}}async replaceMedia(e,t){var n;if(!t)return this.removeMedia([e]);const i=f(this,"initOptions");if(i&&i.sendOptions){const n=i.sendOptions;n.media=n.media.map((n=>n.track.id===e.track.id?t:n)),v(this,"initOptions",Object.assign(Object.assign({},i),{sendOptions:n})),console.error("replaceMedia",f(this,"initOptions"))}const s=null===(n=this.mediaPcMap.get(e.track))||void 0===n?void 0:n.pc;if(!s)return Promise.reject("Cannot find the active peer connection with this track");await s.replaceMedia(e,t),this.mediaPcMap.delete(e.track),this.mediaPcMap.set(t.track,{pc:s,kind:t.kind})}async removeMedia(e){if(!f(this,"initOptions"))return Promise.reject("SDK not initialized");for(const t of e)await this._handleStopTrack(t.track)}isFirstConnection(e){const t=f(this,"initOptions");return(null==t?void 0:t.firstPc)===e}getTracks(e,t){const n={},i=this.peerConnectionList.get(e),s=new Map;return null==i||i.getTransceivers().forEach((e=>{s.set(e.mid,e)})),Object.keys(t).forEach((e=>{const t=s.get(e);n[t.mid]=t.receiver.track})),n}onConnected(e){const t=f(this,"initOptions");(null==t?void 0:t.firstPc)===e&&(v(this,"state","connected"),this.dispatchEvent({type:l,target:this,timeStamp:Date.now()}))}async _generatePair(e,t=!1){const n=e.filter(g("audio")).sort(O("audio")),i=e.filter(g("video")).sort(O("video")),s=w(n),a=w(i);let o=s.next(),r=a.next();for(;!o.done||!r.done;){const e=[o,r].reduce(((e,t)=>(t.done||e.push(t.value),e)),[]);await this._addTracks(e,t),o=s.next(),r=a.next()}}async _addTracks(t,n){const i=f(this,"initOptions"),s=this.peerConnectionList.size>0;let a;a=n||2===t.length?await e({isSendOnly:s}):await this.findPC(t[0].kind)||await e({isSendOnly:s}),!this.peerConnectionList.size&&i&&(i.firstPc=a.id,v(this,"initOptions",i)),this.peerConnectionList.set(a.id,a);for(const e of t){await a.addMedia(e);const{track:t,kind:n}=e;this.mediaPcMap.set(t,{kind:n,pc:a})}}async _handleStopTrack(e){const t=f(this,"initOptions");if(t&&t.sendOptions){const n=t.sendOptions;n.media=n.media.filter((t=>t.track.id!==e.id)),v(this,"initOptions",Object.assign(Object.assign({},t),{sendOptions:n}))}const n=this.mediaPcMap.get(e);if(null==n?void 0:n.pc){await n.pc.replaceMedia({track:e,kind:n.kind},null),this.mediaPcMap.delete(e);this.reverseTrackPCmap().has(n.pc)||(n.pc.stop(),this.peerConnectionList.delete(n.pc.id),null==t||t.core.send({name:"disconnectCall",params:{id:n.pc.id,headers:{}}},{toGW:!0}))}}async closePeerConnections(){const e=f(this,"peerConnections");e&&(e.forEach((e=>{e.close()})),v(this,"peerConnections",[]))}async findPC(e){const t=this.reverseTrackPCmap(),n="video"===e||"screen_video"===e?["video","screen_video"]:["audio","screen_audio"];let i;for(const[e,s]of t){const t=Object.keys(s);if(1===t.length&&!n.includes(t[0])){i=e;break}}return i}reverseTrackPCmap(){const e=new Map,t=this.mediaPcMap.entries();let n=t.next();for(;!n.done;){const i=n.value,s={[i[1].kind]:i[0]};if(e.has(i[1].pc)){console.error("TODO when replace");const t=e.get(i[1].pc);e.set(i[1].pc,Object.assign(Object.assign({},t),{track:s}))}else e.set(i[1].pc,s);n=t.next()}return e}async activatePc(e){const t=[],n=f(this,"initOptions");for(const n of e){const[e,i]=await n.getOffer();t.push({sdp:e,id:n.id,midData:i})}console.log("activatePc",t);for(const e of t)await(null==n?void 0:n.core.send({name:"callConference",params:{reserved_1:-1,number:n.number,isVideo:!0,id:e.id,reserved_2:null,reserved_3:null,headers:n.extraHeaders||{},reserved_4:"",sdp:e.sdp.sdp,midData:e.midData}},{toGW:!0}))}}const y={major:5,minor:0,rev:2};let b;const C=[],E=function(e){b=e,b.registerModule((e=>{switch(e.name){case"GW.handleConnectionConnected":return Object.assign(Object.assign({},e),{handler:P});case"GW.handleSIPInfo":return Object.assign(Object.assign({},e),{handler:_});case"GW.handleSipEvent":case"GW.handleReInvite":return Object.assign(Object.assign({},e),{handler:M});default:return!1}}),void 0,(async e=>{switch(e.name){case"GW.handleReInvite":await j(e)}}))},P=e=>{const t=C.find((t=>t.isFirstConnection(e.id)));null==t||t.onConnected(e.id)},j=async e=>{let t;try{t=JSON.parse(e.scheme)}catch(e){throw new Error("Server scheme is broken")}const n=C.find((t=>t.isFirstConnection(e.id)));n&&0!==t.reinviteCauses.length&&t.reinviteCauses.forEach((i=>{if(console.error("websdk",i,n.isFirstConnection(e.id)),"vi/conf-info-added"===i.event){const s=t.endpoints[i.id].mids,a=n.getTracks(e.id,s);n.dispatchEvent({type:r,target:n,timeStamp:Date.now(),endpointId:i.id,displayName:i.displayName,userName:i.username,mids:s,tracks:a})}if("vi/conf-info-removed"===i.event&&n.dispatchEvent({type:c,target:n,timeStamp:Date.now(),endpointId:i.id}),"vi/conf-info-updated"===i.event){const s=t.endpoints[i.id].mids,a=n.getTracks(e.id,s);n.dispatchEvent({type:d,target:n,timeStamp:Date.now(),endpointId:i.id,mids:s,tracks:a})}}))},M=async e=>{console.warn(0,e)},_=async e=>{const t=C.find((t=>t.isFirstConnection(e.id)));t&&t.dispatchEvent({type:p,target:t,timeStamp:Date.now(),message:e.body})},D=function(){return{dependencies:{require:{webrtc:{comparator:"graterOrEqual",major:5,minor:0,rev:0}}},name:"conference",setup:E,version:y}};async function S(e){if(!b)throw Error(a("ERR_NOT_CONFIGURED"));const t=new k(Object.assign(Object.assign({},e),{core:b}));return await t.init(),C.push(t),t}export{D as ConferenceLoader,u as Events,S as joinConference};
//# sourceMappingURL=conference.esm.min.js.map
