"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@voximplant/websdk");
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function t(e,t,i,n){var a,s=arguments.length,o=s<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var r=e.length-1;r>=0;r--)(a=e[r])&&(o=(s<3?a(o):s>3?a(t,i,o):a(t,i))||o);return s>3&&o&&Object.defineProperty(t,i,o),o}function i(){var e;return(null===(e=global.crypto)||void 0===e?void 0:e.randomUUID)?global.crypto.randomUUID():a(n(32),8)+"-"+a(n(16),4)+"-"+a(16384|n(12),4)+"-"+a(32768|n(14),4)+"-"+a(n(48),12)}function n(e){return e<0?NaN:e<=30?0|Math.random()*(1<<e):e<=53?(0|Math.random()*(1<<30))+(0|Math.random()*(1<<e-30))*(1<<30):NaN}function a(e,t){let i=e.toString(16),n=t-i.length,a="0";for(;n>0;n>>>=1,a+=a)1&n&&(i=a+i);return i}const s=function(e){const t={},i=function(t){return!e||Object.values(e).some((e=>e===t))},n=function(e,n){i(e)&&t[e.name]&&(t[e.name]=t[e.name].filter((e=>e.listener!==n)))};return{addEventListener:function(e,a,s){var o;i(e)&&(o=e.name,t[o]||(t[o]=[]),s&&s.signal&&(s.signal.onabort=function(){n(e,a)}),t[e.name].push({once:s&&s.once||!1,fulfilled:!1,listener:a}))},removeEventListener:n,dispatchEvent:function(e){const i=e.type.name;t[i]&&t[i].forEach((t=>{t.once&&t.fulfilled||t.listener(e),t.fulfilled=!0}))}}};class o extends class{constructor(){const e=s();this.addEventListener=e.addEventListener,this.removeEventListener=e.removeEventListener,this.dispatchEvent=e.dispatchEvent}}{constructor(e){super(),this.rawValue=e,this.watchEvent=function(e){return{name:e}}("__watchEvent")}get value(){return this.rawValue}set value(e){if(this.rawValue!==e){const t=this.rawValue;this.rawValue=e,this.dispatchEvent({type:this.watchEvent,oldValue:t,newValue:e,target:null,timeStamp:Date.now()})}}watch(e,t){this.addEventListener(this.watchEvent,e,t)}}const r=((e,t="")=>(i,...n)=>{const a=e[i];return t+(a?((e,...t)=>e.replace(/{(\d+)}/g,(function(e,i){return void 0!==t[i-1]?t[i-1]:e})))(a,...n):i)})(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},{}),{INFO_WEBRTC_PEER_CONNECTION_CREATED:"({1}) 🎉 PeerConnection was created. Now we have {2} active PeerConnections",INFO_WEBRTC_PEER_CONNECTION_CLOSED:"({1}) 🎈 PeerConnection was closed. Now we have {2} active PeerConnections",INFO_CREATE_CANDIDATE:'({1}) Create candidate with sdpMLineIndex:{2} candidate:"{3}"',INFO_SET_CANDIDATE:"({1}) Set candidate {2}. State:{3} iceConnectionState:{4} iceGatheringState:{5}",INFO_SET_REMOTE_DESCRIPTION:"({1}) 🚐 Set remote description type {2}. State:{3} iceConnectionState:{4} iceGatheringState:{5}",INFO_REMOTE_DESCRIPTION_WAS_SET:"({1}) ✅ Remote description type {2} was set. State:{3} iceConnectionState:{4} iceGatheringState:{5}",INFO_CREATE_DESCRIPTION:"({1}) 🚐 Create local {2}. State:{3} iceConnectionState:{4} iceGatheringState:{5}",INFO_DESCRIPTION_CREATED:"({1}) ✅ Local {2} was created. State:{3} iceConnectionState:{4} iceGatheringState:{5}",INFO_SET_LOCAL_DESCRIPTION:"({1}) 🚐 Set local description type {2}. State:{3} iceConnectionState:{4} iceGatheringState:{5}",INFO_LOCAL_DESCRIPTION_WAS_SET:"({1}) ✅ Local description type {2} was set. State:{3} iceConnectionState:{4} iceGatheringState:{5}",INFO_SET_ICE_SERVERS:"({1}) 🚐 Updating ICE servers: {2}",INFO_CONFIG_UPDATED:"({1}) ✅ PeerConnection config was updated",INFO_NEW_POLITE_INDEX_SET:"({1}) Polite index was updated from {2} to {3}",INFO_ADD_MEDIA:"({1}) 🚐 Add media track {2} with kind {3} declared as {4}",INFO_MEDIA_ADDED:"({1}) ✅ Media track {2} with kind {3} declared as {4} was added to transceiver {5}",INFO_POLITE_ROLLBACK:"({1}) Reinvite conflict. Our politeIndex is {2} and it greater then remote index {3}. Perform polite rollback.",INFO_IMPOLITE_REJECT:"({1}) Reinvite conflict. Our politeIndex is {2} and it less then remote index {3}. Perform impolite reject.",INFO_DESCRIPTION_EXTRA:"({1}) Generate extra description {2}",INFO_LOCAL_CANDIDATE:'({1}) New local candidate sdpMLineIndex:{2} candidate:"{3}". State:{4} iceConnectionState:{5} iceGatheringState:{6}',INFO_END_CANDIDATE:"({1}) End of candidates. State:{2} iceConnectionState:{3} iceGatheringState:{4}",INFO_SEND_CANDIDATES:"({1}) 📤 Send {2} candidates to GW.",INFO_STOP_PEER_CONNECTION:"({1}) ❌ Close peerConnection",INFO_REPLACE_MEDIA:"({1}) ♻ Replace media track from {2} to {3}",INFO_SIM_CREATE_SEND_PARAMS:"(SIM) Create send params for track {1} with kind {2}",INFO_SIM_GET_TRACK_SIZE:"(SIM) Detected track size for {1} W:{2} H:{3}",INFO_SIM_SELECTED_PROFILE:"(SIM) Selected profile name for {1} is {2}"}),{WARN_CANDIDATE_PARSE:'❌ Can\'t parse remote webrtc candidate "{1}"',WARN_CANT_SET_CANDIDATE:'❌ Can\'t set remote webrtc candidate sdpMLineIndex:{1} candidate:"{2}"',WARN_SET_ICE_SERVERS:"({1}) ❌ Can't update ICE servers: {2}. {3}"}),{ERR_NOT_CONFIGURED:"⛔ Voximplant WebSDK not configured yet. Please use SDK.configure before using any Voximplant WsbSDK functions.",ERR_WEBRTC_CREATE_OFFER:"⛔ Error creating RTCPeerConnection {1} offer: {2}. Rollback.",ERR_WEBRTC_WRONG_SIGNALING_STATE:'⛔ Try to perform "{1}" on wrong signaling state "{2}"',ERR_CANT_PARSE_SCHEME:"⛔ Can\t parse scheme {1}",ERR_PEER_CONNECTION_NOT_FOUND:"⛔ Peer Connection with id {1} not found",ERR_REMOTE_DESCRIPTION_ERR:"({1}) ⛔ Failed to set remote {2}. {3}",WARN_SCHEME_PARSE_ERROR:"({1}) ⛔ Failed to parse scheme at {2} {3}. {4}",ERR_HANDLE_REINVITE:"({1}) ⛔ handleReinvite was failed. Reject will send. {2}"}),{}),"[WEBRTC] "),c="closed",l="have-local-offer",d="have-remote-offer",h="stable",E={type:"voximplant",subType:"sdpfrag"};class g{constructor(e,t,i){this.id=e,this.customSignalingState="stable",this.onSignalingStateChange=()=>{this.customSignalingState=this.peerConnection.signalingState},this.peerConnection=new RTCPeerConnection(t,i),this.peerConnection.onsignalingstatechange=this.onSignalingStateChange}get signalingState(){return this.customSignalingState}get iceConnectionState(){return this.peerConnection.iceConnectionState}get connectionState(){return this.peerConnection.connectionState}get iceGatheringState(){return this.peerConnection.iceGatheringState}set onicecandidate(e){this.peerConnection.onicecandidate=e}addEventListener(e,t,i){this.peerConnection.addEventListener(e,t,i)}removeEventListener(e,t,i){this.peerConnection.removeEventListener(e,t,i)}async createOffer(t){e.SDK.log(r("INFO_CREATE_DESCRIPTION",this.id,"offer",this.signalingState,this.iceConnectionState,this.iceGatheringState),{logLevel:"info"});const i=await this.peerConnection.createOffer(t);return e.SDK.log(r("INFO_DESCRIPTION_CREATED",this.id,i.type,this.signalingState,this.iceConnectionState,this.iceGatheringState),{logLevel:"info"}),i}async createAnswer(t){e.SDK.log(r("INFO_CREATE_DESCRIPTION",this.id,"answer",this.signalingState,this.iceConnectionState,this.iceGatheringState),{logLevel:"info"});const i=await this.peerConnection.createAnswer(t);return e.SDK.log(r("INFO_DESCRIPTION_CREATED",this.id,i.type,this.signalingState,this.iceConnectionState,this.iceGatheringState),{logLevel:"info"}),i}setConfiguration(t){var i;e.SDK.log(r("INFO_SET_ICE_SERVERS",this.id,(null===(i=null==t?void 0:t.iceServers)||void 0===i?void 0:i.join(","))||""),{logLevel:"info"}),this.peerConnection.setConfiguration(t),e.SDK.log(r("INFO_CONFIG_UPDATED",this.id),{logLevel:"info"})}getConfiguration(){return this.peerConnection.getConfiguration()}async setLocalDescription(t){this.customSignalingState===h&&"offer"===(null==t?void 0:t.type)&&(this.customSignalingState=d),e.SDK.log(r("INFO_SET_LOCAL_DESCRIPTION",this.id,(null==t?void 0:t.type)||"null",this.signalingState,this.iceConnectionState,this.iceGatheringState),{logLevel:"info"}),await this.peerConnection.setLocalDescription(t),e.SDK.log(r("INFO_LOCAL_DESCRIPTION_WAS_SET",this.id,(null==t?void 0:t.type)||"null",this.signalingState,this.iceConnectionState,this.iceGatheringState),{logLevel:"info"})}async setRemoteDescription(t){this.customSignalingState===h&&"offer"===(null==t?void 0:t.type)&&(this.customSignalingState=d),e.SDK.log(r("INFO_SET_REMOTE_DESCRIPTION",this.id,t.type,this.signalingState,this.iceConnectionState,this.iceGatheringState),{logLevel:"info"}),await this.peerConnection.setRemoteDescription(t),e.SDK.log(r("INFO_REMOTE_DESCRIPTION_WAS_SET",this.id,t.type,this.signalingState,this.iceConnectionState,this.iceGatheringState),{logLevel:"info"})}getTransceivers(){return this.peerConnection.getTransceivers()}addIceCandidate(t){return e.SDK.log(r("INFO_SET_CANDIDATE",this.id,JSON.stringify(t),this.signalingState,this.iceConnectionState,this.iceGatheringState),{logLevel:"info"}),this.peerConnection.addIceCandidate(t)}addTransceiver(e,t){return this.peerConnection.addTransceiver(e,t)}close(){return this.peerConnection.close()}}function R(e=200){return(t,i,n)=>({value:S(n.value,e)})}function S(e,t=200){let i;return function(...n){clearTimeout(i),i=setTimeout((()=>e.apply(this,n)),t)}}var _;!function(e){e[e.APPLY=0]="APPLY",e[e.RETRY=1]="RETRY",e[e.REJECT=2]="REJECT",e[e.ROLLBACK=3]="ROLLBACK",e[e.ERROR=4]="ERROR"}(_||(_={}));class p{constructor(e,t){this.stateFunction=e,this._politeIndex=t}get politeIndex(){return this._politeIndex}set politeIndex(e){this._politeIndex=e}checkRemoteOffer(e){switch(this.stateFunction()){case h:return _.APPLY;case c:return _.ERROR;case l:return this._politeIndex>e?_.ROLLBACK:_.REJECT;case d:default:return _.ERROR}}checkLocalOffer(){switch(this.stateFunction()){case h:return _.APPLY;case c:return _.ERROR;case l:case d:return _.RETRY;default:return _.ERROR}}checkRemoteAnswer(){switch(this.stateFunction()){case h:return _.REJECT;case c:return _.ERROR;case l:return _.APPLY;case d:return _.REJECT;default:return _.ERROR}}checkRemoteReject(){switch(this.stateFunction()){case h:case c:return _.ERROR;case l:return _.ROLLBACK;case d:default:return _.ERROR}}}const I=1920,C=1080,O=[0,479,719];const u={basic:e=>{const[t,i]=function(e){return void 0===(null==e?void 0:e.width)||void 0===(null==e?void 0:e.height)?[0,0]:e.width>e.height?[e.height,e.width]:[e.width,e.height]}(e),n=i/320;if(n<1){return[{rid:"l",active:!0,maxBitrate:15e5}]}const a=t/720;if(a<1){return[{rid:"l",active:!0,maxBitrate:3e5,scaleResolutionDownBy:n},{rid:"m",active:!0,maxBitrate:5e5}].reverse()}const s=[{rid:"l",active:!0,maxBitrate:3e5,scaleResolutionDownBy:n},{rid:"m",active:!0,maxBitrate:6e5,scaleResolutionDownBy:a},{rid:"h",active:!0,maxBitrate:t>=C?25e5:15e5}],o=s.slice(0,function(e){return O.reduce(((t,i,n)=>e>i?n:t),0)+1}(t)).reverse();return o[0].maxBitrate=s[2].maxBitrate,delete o[0].scaleResolutionDownBy,o},basicShare:e=>[{rid:"l",active:!0,maxBitrate:3e6}]};function N({media:t}){e.SDK.log(r("INFO_SIM_CREATE_SEND_PARAMS",t.track.id.toString(),t.kind),{logLevel:"info"});const{width:i,height:n}=function({media:e}){const{width:t=I,height:i=C}=e.track.getSettings?e.track.getSettings():{};return{width:t,height:i}}({media:t});e.SDK.log(r("INFO_SIM_GET_TRACK_SIZE",t.track.id.toString(),i.toString(),n.toString()),{logLevel:"info"});const a=0===t.kind.indexOf("screen")?"basicShare":"basic";e.SDK.log(r("INFO_SIM_SELECTED_PROFILE",t.track.id.toString(),a),{logLevel:"info"});const s=(0,u[a])({width:i,height:n});return console.error(s),s}function T(e){return-1!==e.indexOf("audio")?"audio":"video"}class f{constructor(t){var n;this.state=new o("new"),this.isInnocent=!0,this.mediaKindMap=new Map,this.candidatePool=new Set,this.mediaSlots={audio:null,video:null},this.onIceCandidate=t=>{const{candidate:i}=t;i&&""!==i.candidate?(e.SDK.log(r("INFO_LOCAL_CANDIDATE",this.id,String(i.sdpMLineIndex||0),i.candidate,this.impl.signalingState,this.impl.iceConnectionState,this.impl.iceGatheringState),{logLevel:"info"}),this.candidatePool.add(i),this.sendCandidates()):e.SDK.log(r("INFO_END_CANDIDATE",this.id,this.impl.signalingState,this.impl.iceConnectionState,this.impl.iceGatheringState),{logLevel:"info"})},this.id=i(),this.coreInstance=t.coreInstance,this.iceConfig=t.iceConfig,this.canReceive=!(null===(n=t.initConfig)||void 0===n?void 0:n.isSendOnly),this.impl=new g(this.id,{bundlePolicy:"max-bundle",rtcpMuxPolicy:"require",iceCandidatePoolSize:0,iceServers:this.iceConfig.iceServers},this.canReceive?{}:{optional:[{googScreencastMinBitrate:400},{googCombinedAudioVideoBwe:!0},{googCpuOveruseDetection:!1}]}),this.impl.onicecandidate=this.onIceCandidate,this.polly=new p((()=>this.impl?this.impl.signalingState:c),0)}get extra(){return{mids:Array.from(this.mediaKindMap.entries()).reduce(((e,[t,i])=>(t.mid&&(e[t.mid]=i),e)),{})}}async getOffer(){try{if(!this.isConnectionReady())throw new DOMException(r("ERR_WEBRTC_WRONG_SIGNALING_STATE","getOffer",this.impl.signalingState),"ERR_WEBRTC_WRONG_SIGNALING_STATE");this.isInnocent=!1;const t=await this.impl.createOffer({offerToReceiveAudio:!0});if("stable"!==this.impl.signalingState)throw new DOMException(r("ERR_WEBRTC_WRONG_SIGNALING_STATE","getOffer.setLocalDescription",this.impl.signalingState),"ERR_WEBRTC_WRONG_SIGNALING_STATE");await this.impl.setLocalDescription(t);const{extra:i}=this;return e.SDK.log(r("INFO_DESCRIPTION_EXTRA",this.id,JSON.stringify(i)),{logLevel:"info"}),[t,i]}catch(t){throw e.SDK.log(r("ERR_WEBRTC_CREATE_OFFER",this.id,t.message),{logLevel:"error",sessionId:this.id}),t}}setPoliteIndex(t){e.SDK.log(r("INFO_NEW_POLITE_INDEX_SET",this.id,this.polly.politeIndex.toString(),t.toString()),{logLevel:"info"}),this.polly.politeIndex=t}async setRemoteDescription(t){if(this.impl.signalingState!==l)throw new DOMException(r("ERR_WEBRTC_WRONG_SIGNALING_STATE","setRemoteDescription",this.impl.signalingState),"ERR_WEBRTC_WRONG_SIGNALING_STATE");try{await this.impl.setRemoteDescription(t)}catch(i){e.SDK.log(r("ERR_REMOTE_DESCRIPTION_ERR",this.id,t.type,i.message),{logLevel:"error"})}}async setIceServers(t){const i=t.map((e=>Array.isArray(e.urls)?e.urls.join(","):e.urls)).join(";");try{const e=this.impl.getConfiguration();this.impl.setConfiguration(Object.assign(Object.assign({},e),{iceServers:t}))}catch(t){e.SDK.log(r("WARN_SET_ICE_SERVERS",this.id,i,t.message),{logLevel:"warning"})}}async addIceCandidate(t){const i=t[0],n=t[1].substring(2);e.SDK.log(r("INFO_CREATE_CANDIDATE",this.id,i.toString(),n),{logLevel:"info"});const a=new RTCIceCandidate({sdpMLineIndex:i,candidate:n});return this.impl.addIceCandidate(a)}async addMedia(t){var i;const n=T(t.kind);if(null===(i=this.mediaSlots[n])||void 0===i?void 0:i.sender.track)throw new Error("This kind type is already occupied");let a;e.SDK.log(r("INFO_ADD_MEDIA",this.id,t.track.id,t.track.kind,t.kind),{logLevel:"info"}),this.mediaSlots[n]?(a=this.mediaSlots[n],await a.sender.replaceTrack(t.track)):("video"===n?(a=this.impl.addTransceiver(t.track,{sendEncodings:N({media:t})}),console.error(a)):a=this.impl.addTransceiver(t.track),this.mediaSlots[n]=a),e.SDK.log(r("INFO_MEDIA_ADDED",this.id,t.track.id,t.track.kind,t.kind),{logLevel:"info"}),this.mediaKindMap.set(a,t.kind),"connected"===this.impl.connectionState&&await this.sendReinvite()}async replaceMedia(t,i){const n=T(t.kind),a=T((null==i?void 0:i.kind)||t.kind);if(e.SDK.log(r("INFO_REPLACE_MEDIA",this.id,t.kind,(null==i?void 0:i.kind)||"null"),{logLevel:"info"}),a!==n)throw new Error("Kind is not compatible");const s=this.mediaSlots[n];if(!s)throw new Error("Media track is not found");if(i){await s.sender.replaceTrack(i.track);const e=this.mediaKindMap.get(s);if(i.kind==e)return;this.mediaKindMap.set(s,i.kind),"connected"===this.impl.connectionState&&await this.sendReinvite()}else await s.sender.replaceTrack(null),this.mediaKindMap.delete(s),"connected"===this.impl.connectionState&&await this.sendReinvite()}async sendDTMF(){throw Error("Not implemented")}stop(){e.SDK.log(r("INFO_STOP_PEER_CONNECTION",this.id),{logLevel:"info"}),this.impl.close(),this.impl=null,this.state.value="closed"}async receiveReinvite(t,i){const n=async()=>{await this.impl.setRemoteDescription(t),this.canReceive||this.impl.getTransceivers().forEach((e=>{!e.mid||"v"!==e.mid[0]&&"a"!==e.mid[0]||(e.direction="inactive")}));const i=await this.impl.createAnswer();await this.impl.setLocalDescription(i);const{extra:n}=this;e.SDK.log(r("INFO_DESCRIPTION_EXTRA",this.id,JSON.stringify(n)),{logLevel:"info"}),await this.coreInstance.send({name:"AcceptReInvite",params:{id:this.id,sdp:i.sdp,extra:n,headers:{}}},{toGW:!0})};switch(this.polly.checkRemoteOffer(i)){case _.APPLY:await n();break;case _.ROLLBACK:e.SDK.log(r("INFO_POLITE_ROLLBACK",this.id,this.polly.politeIndex.toString(),i.toString()),{logLevel:"info"}),await this.impl.setLocalDescription({type:"rollback"}),await n();break;case _.REJECT:e.SDK.log(r("INFO_IMPOLITE_REJECT",this.id,this.polly.politeIndex.toString(),i.toString()),{logLevel:"info"}),await this.coreInstance.send({name:"RejectReInvite",params:{id:this.id,headers:{}}},{toGW:!0});break;case _.ERROR:}}getTransceivers(){return this.impl.getTransceivers()}async receiveReinviteAnswer(t){switch(this.polly.checkRemoteAnswer()){case _.APPLY:await this.impl.setRemoteDescription(t);break;case _.REJECT:e.SDK.log(r("INFO_IMPOLITE_REJECT",this.id,this.polly.politeIndex.toString(),"-9000"),{logLevel:"info"}),await this.coreInstance.send({name:"RejectReInvite",params:{id:this.id,headers:{}}},{toGW:!0});break;case _.ERROR:}}sendCandidates(){e.SDK.log(r("INFO_SEND_CANDIDATES",this.id,this.candidatePool.size.toString()),{logLevel:"info"});const{type:t,subType:i}=E;this.coreInstance.send({name:"sendSIPInfo",params:{id:this.id,type:t,subType:i,message:JSON.stringify(Array.from(this.candidatePool)),headers:{}}},{toGW:!0}),this.candidatePool.clear()}isConnectionReady(){return this.impl.signalingState===h}async sendReinvite(t=1){switch(this.polly.checkLocalOffer()){case _.APPLY:{const t=await this.impl.createOffer();await this.impl.setLocalDescription(t);const{extra:i}=this;e.SDK.log(r("INFO_DESCRIPTION_EXTRA",this.id,JSON.stringify(i)),{logLevel:"info"}),await this.coreInstance.send({name:"ReInvite",params:{id:this.id,sdp:t.sdp,extra:i,headers:{}}},{toGW:!0});break}case _.RETRY:this.impl.addEventListener("signalingstatechange",(()=>{this.impl.signalingState===h&&this.sendReinvite()}),{once:!0});break;case _.ERROR:}}async receiveReject(){switch(this.polly.checkRemoteReject()){case _.ROLLBACK:await this.impl.setLocalDescription({type:"rollback"}),await this.sendReinvite();break;case _.ERROR:}}}t([R()],f.prototype,"sendCandidates",null),t([R(100)],f.prototype,"sendReinvite",null);const m={major:5,minor:0,rev:2};let v,D;i();const w=function(e){v=e,v.registerModule((e=>{switch(e.name){case"WebRTC.iceConfig":return Object.assign(Object.assign({},e),{handler:b});case"GW.handleReInvite":if(k.has(e.id))return Object.assign(Object.assign({},e),{handler:L});break;case"GW.handleAcceptReinvite":return Object.assign(Object.assign({},e),{handler:y});case"GW.handleRejectReinvite":console.warn("[WEBRTC]",e);break;case"GW.onICEConfig":if(k.has(e.id))return Object.assign(Object.assign({},e),{handler:F});break;case"GW.onICEConfigFailed":console.warn("[WEBRTC]",e);break;default:return!1}return!1}),(async e=>{switch(e.name){case"GW.handleConnectionConnected":await A(e);break;case"GW.handleSIPInfo":await P(e)}}))},A=async t=>{const i=k.get(t.id);if(i){const n=t.sdp;if(await i.setRemoteDescription({type:"answer",sdp:n}),t.scheme)try{const e=JSON.parse(t.scheme);i.setPoliteIndex(parseInt(e.politeIndex||"1"))}catch(i){e.SDK.log(r("WARN_SCHEME_PARSE_ERROR",t.id,t.name,t.scheme,i.message),{logLevel:"warning"})}}},L=async t=>{const i=k.get(t.id);if(i)try{const e=JSON.parse(t.scheme),n=parseInt(e.politeIndex||"0"),{sdp:a}=t;await i.receiveReinvite(new RTCSessionDescription({sdp:a,type:"offer"}),n)}catch(i){e.SDK.log(r("ERR_HANDLE_REINVITE",t.id,i.message),{logLevel:"error"}),await v.send({name:"RejectReInvite",params:{id:t.id,headers:{}}},{toGW:!0})}else e.SDK.log(r("ERR_PEER_CONNECTION_NOT_FOUND",t.id),{logLevel:"error"})},y=async t=>{const i=k.get(t.id);if(i)try{const{sdp:e}=t;await i.receiveReinviteAnswer(new RTCSessionDescription({sdp:e,type:"answer"}))}catch(i){e.SDK.log(r("ERR_HANDLE_REINVITE",t.id,i.message),{logLevel:"error"}),await v.send({name:"RejectReInvite",params:{id:t.id,headers:{}}},{toGW:!0})}else e.SDK.log(r("ERR_PEER_CONNECTION_NOT_FOUND",t.id),{logLevel:"error"})},P=async t=>{const i=k.get(t.id);if(i&&t.type===E.type&&t.subType===E.subType){let n=[];try{n=JSON.parse(t.body)}catch(i){e.SDK.log(r("WARN_CANDIDATE_PARSE",t.body),{logLevel:"warning"})}for(const t of n)try{await i.addIceCandidate(t)}catch(i){console.error(i),e.SDK.log(r("WARN_CANT_SET_CANDIDATE",t[0].toString(),t[1]),{logLevel:"warning"})}}},F=async t=>{const i=k.get(t.id);i?await i.setIceServers(t.config):e.SDK.log(r("ERR_PEER_CONNECTION_NOT_FOUND",t.id),{logLevel:"error"})},b=e=>{D=e.params.iceConfig},k=new Map;exports.PeerConnection=f,exports.WebrtcLoader=function(){return{dependencies:{},name:"webrtc",setup:w,version:m}},exports.createPeerConnection=async t=>{if(!v)throw Error(r("ERR_NOT_CONFIGURED"));const i=new f({coreInstance:v,iceConfig:D,initConfig:t});return k.set(i.id,i),e.SDK.log(r("INFO_WEBRTC_PEER_CONNECTION_CREATED",i.id,k.size.toString()),{logLevel:"info"}),i.state.watch((({oldValue:t,newValue:n})=>{"closed"!==t&&"closed"===n&&(k.delete(i.id),e.SDK.log(r("INFO_WEBRTC_PEER_CONNECTION_CLOSED",i.id,k.size.toString()),{logLevel:"info"}))})),i},exports.getWebRtcCapabilities=()=>({webrtc:!0,desktopSharing:!0,insertableStreams:!1,webCodecs:!1});
//# sourceMappingURL=webrtc.cjs.min.js.map
